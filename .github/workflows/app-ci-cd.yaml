name: CI/CD for Node.js CRUD App

on:
  # push:
  #   branches: [ main ]
  #   tags:
  #     - 'v*.*.*'
  workflow_dispatch:

env:  
  image_name: ${{ secrets.DOCKER_IMAGE_NAME }}

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest

    outputs:
      image_name: ${{ env.image_name }}
      image_digest: ${{ steps.docker_build.digest }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ env.image_name }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            latest

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./challenge1/nodejs-mysql-crud
          # Dockerfile to use
          dockerfile: ./challenge1/nodejs-mysql-crud/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-dev:
    name: Deploy to Dev environment
    runs-on: ubuntu-latest
    environment: dev
    needs: [ build ]

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }} # if you have/need it
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Render Amazon ECS task definition
        id: render-task-definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ./challenge1/nodejs-mysql-crud/ecs-task-definition.json
          container-name: symbiosis-service
          image: ${{ env.image_name }}:${{ needs.build.outputs.image_digest }}

      - name: Deploy to Amazon ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-task-definition.outputs.task-definition }}
          service: symbiosis-service
          cluster: symbiosis-fargate-dev

      
